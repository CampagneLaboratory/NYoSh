<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="NYoSh.typesystem.CommandsSeparatedByOperators_NonTypesystemRule" file="CommandsSeparatedByOperators_NonTypesystemRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="NYoSh.typesystem.OperatorsNotNextToOneAnother_NonTypesystemRule" file="OperatorsNotNextToOneAnother_NonTypesystemRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="NYoSh.typesystem.TypesystemDescriptor" file="TypesystemDescriptor.java">
    <classNode dependClassName="NYoSh.typesystem.CommandsSeparatedByOperators_NonTypesystemRule" />
    <classNode dependClassName="NYoSh.typesystem.OperatorsNotNextToOneAnother_NonTypesystemRule" />
    <classNode dependClassName="NYoSh.typesystem.typeof_ConceptFunctionParameter_outputReader_InferenceRule" />
    <classNode dependClassName="NYoSh.typesystem.typeof_ConceptFunctionParameter_outputStream_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.BaseHelginsDescriptor" />
  </dependency>
  <dependency className="NYoSh.typesystem.typeof_ConceptFunctionParameter_outputReader_InferenceRule" file="typeof_ConceptFunctionParameter_outputReader_InferenceRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.project.GlobalScope" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="NYoSh.typesystem.typeof_ConceptFunctionParameter_outputStream_InferenceRule" file="typeof_ConceptFunctionParameter_outputStream_InferenceRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.project.GlobalScope" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
</dependenciesRoot>

