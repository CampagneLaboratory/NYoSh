package NYoSh.actions;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.action.NodeSetupContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import java.util.List;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class QueriesGenerated {
  public static void nodeFactory_NodeSetup_IEntryPointPrototype_2829258213786705882(final IOperationContext operationContext, final NodeSetupContext _context) {
    if (LOG.isInfoEnabled()) {
      LOG.info("Setting up node:" + _context.getNewNode());
    }
    if (LOG.isInfoEnabled()) {
      LOG.info("Setting up with enclosingNode: " + _context.getEnclosingNode());
    }
    SNode entryPoint = SNodeOperations.cast(_context.getEnclosingNode(), "NYoSh.structure.EntryPoint");
    SLinkOperations.setTarget(entryPoint, "implementation", _quotation_createNode_b5fxzj_a0d0a0(), true);
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(entryPoint, "implementation", true), "parameter", true)).clear();
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(entryPoint, "implementation", true), "parameter", true)).addSequence(ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), _context.getNewNode(), "virtual_parameters_2829258213786778419", new Object[]{})));
  }

  protected static Logger LOG = LogManager.getLogger(QueriesGenerated.class);

  private static SNode _quotation_createNode_b5fxzj_a0d0a0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_1, "name", "implementation");
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("returnType", quotedNode_2);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("visibility", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("body", quotedNode_4);
    return quotedNode_1;
  }
}
