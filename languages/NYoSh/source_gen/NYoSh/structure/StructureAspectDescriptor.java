package NYoSh.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("NYoSh.structure.AbstractCommand").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 1:
        return new ConceptDescriptorBuilder("NYoSh.structure.AndCommandOperator").super_("NYoSh.structure.BinaryCommandOperator").parents("NYoSh.structure.BinaryCommandOperator").alias("&&", "").create();
      case 2:
        return new ConceptDescriptorBuilder("NYoSh.structure.ArgumentParser").super_("jetbrains.mps.baseLanguage.structure.ClassConcept").parents("jetbrains.mps.baseLanguage.structure.ClassConcept").create();
      case 3:
        return new ConceptDescriptorBuilder("NYoSh.structure.BinaryCommandOperator").super_("NYoSh.structure.AbstractCommand").parents("NYoSh.structure.AbstractCommand").properties("operator").alias("<?>", "").create();
      case 4:
        return new ConceptDescriptorBuilder("NYoSh.structure.ChangeDirectory").super_("NYoSh.structure.AbstractCommand").parents("NYoSh.structure.AbstractCommand").children(new String[]{"path"}, new boolean[]{false}).alias("cd", "").create();
      case 5:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConceptFunctionParameter_ParsedArguments").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").references("parserResultType").alias("arguments", "Arguments parsed with the entry point parser").create();
      case 6:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConceptFunctionParameter_outputReader").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("reader", "output from the previous command").create();
      case 7:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConceptFunctionParameter_outputStream").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("stream", "output from the previous command").create();
      case 8:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConceptFunction_ConsumeOutputReaderBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("get reader", "consume reader from previous command").create();
      case 9:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConceptFunction_ConsumeOutputStreamBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("get stream", "consume stream from previous command").create();
      case 10:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConceptFunction_EntryPoint").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").references("parser").create();
      case 11:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConsumeCommandOutputWithReader").super_("NYoSh.structure.ConsumeOutput").parents("NYoSh.structure.ConsumeOutput").children(new String[]{"readerExpression"}, new boolean[]{false}).alias("consume reader", "").create();
      case 12:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConsumeCommandOutputWithStream").super_("NYoSh.structure.ConsumeOutput").parents("NYoSh.structure.ConsumeOutput").children(new String[]{"streamExpression"}, new boolean[]{false}).alias("consume stream", "").create();
      case 13:
        return new ConceptDescriptorBuilder("NYoSh.structure.ConsumeOutput").super_("NYoSh.structure.AbstractCommand").parents("NYoSh.structure.AbstractCommand").properties("consumeStandardOutput", "consumeStandardError").abstract_().create();
      case 14:
        return new ConceptDescriptorBuilder("NYoSh.structure.DefaultArgumentPrototype").super_("NYoSh.structure.EntryPointPrototype").parents("NYoSh.structure.EntryPointPrototype", "NYoSh.structure.IEntryPointPrototype").alias("default", "").create();
      case 15:
        return new ConceptDescriptorBuilder("NYoSh.structure.EntryPoint").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").references("script").children(new String[]{"implementation", "prototype"}, new boolean[]{false, false}).create();
      case 16:
        return new ConceptDescriptorBuilder("NYoSh.structure.EntryPointPrototype").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 17:
        return new ConceptDescriptorBuilder("NYoSh.structure.ExecuteCommand").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"commands"}, new boolean[]{true}).alias("execute", "").create();
      case 18:
        return new ConceptDescriptorBuilder("NYoSh.structure.GStringCommand").super_("NYoSh.structure.AbstractCommand").parents("NYoSh.structure.AbstractCommand").children(new String[]{"command"}, new boolean[]{false}).alias("command", "").create();
      case 19:
        return new ConceptDescriptorBuilder("NYoSh.structure.GobyWebAlignPluginPrototype").super_("NYoSh.structure.EntryPointPrototype").parents("NYoSh.structure.EntryPointPrototype", "NYoSh.structure.IEntryPointPrototype").alias("align", "").create();
      case 20:
        return new ConceptDescriptorBuilder("NYoSh.structure.IEntryPointPrototype").interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").create();
      case 21:
        return new ConceptDescriptorBuilder("NYoSh.structure.OrCommandOperator").super_("NYoSh.structure.BinaryCommandOperator").parents("NYoSh.structure.BinaryCommandOperator").alias("||", "").create();
      case 22:
        return new ConceptDescriptorBuilder("NYoSh.structure.ParsedArgumentType").super_("jetbrains.mps.baseLanguage.structure.ClassConcept").parents("jetbrains.mps.baseLanguage.structure.ClassConcept").create();
      case 23:
        return new ConceptDescriptorBuilder("NYoSh.structure.PipeOutCommandOperator").super_("NYoSh.structure.BinaryCommandOperator").parents("NYoSh.structure.BinaryCommandOperator").alias("|", "").helpURL("http://goby.campagnelab.org").create();
      case 24:
        return new ConceptDescriptorBuilder("NYoSh.structure.PipeOutErrCommandOperator").super_("NYoSh.structure.BinaryCommandOperator").parents("NYoSh.structure.BinaryCommandOperator").alias("|&", "").helpURL("http://goby.campagnelab.org").create();
      case 25:
        return new ConceptDescriptorBuilder("NYoSh.structure.Script").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.execution.util.structure.IMainClass", "jetbrains.mps.lang.core.structure.ScopeProvider", "jetbrains.mps.lang.core.structure.InterfacePart").children(new String[]{"entryPoints"}, new boolean[]{true}).create();
      case 26:
        return new ConceptDescriptorBuilder("NYoSh.structure.SemiColonCommandOperator").super_("NYoSh.structure.BinaryCommandOperator").parents("NYoSh.structure.BinaryCommandOperator").alias(";", "").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"NYoSh.structure.AbstractCommand", "NYoSh.structure.AndCommandOperator", "NYoSh.structure.ArgumentParser", "NYoSh.structure.BinaryCommandOperator", "NYoSh.structure.ChangeDirectory", "NYoSh.structure.ConceptFunctionParameter_ParsedArguments", "NYoSh.structure.ConceptFunctionParameter_outputReader", "NYoSh.structure.ConceptFunctionParameter_outputStream", "NYoSh.structure.ConceptFunction_ConsumeOutputReaderBlock", "NYoSh.structure.ConceptFunction_ConsumeOutputStreamBlock", "NYoSh.structure.ConceptFunction_EntryPoint", "NYoSh.structure.ConsumeCommandOutputWithReader", "NYoSh.structure.ConsumeCommandOutputWithStream", "NYoSh.structure.ConsumeOutput", "NYoSh.structure.DefaultArgumentPrototype", "NYoSh.structure.EntryPoint", "NYoSh.structure.EntryPointPrototype", "NYoSh.structure.ExecuteCommand", "NYoSh.structure.GStringCommand", "NYoSh.structure.GobyWebAlignPluginPrototype", "NYoSh.structure.IEntryPointPrototype", "NYoSh.structure.OrCommandOperator", "NYoSh.structure.ParsedArgumentType", "NYoSh.structure.PipeOutCommandOperator", "NYoSh.structure.PipeOutErrCommandOperator", "NYoSh.structure.Script", "NYoSh.structure.SemiColonCommandOperator"};
}
