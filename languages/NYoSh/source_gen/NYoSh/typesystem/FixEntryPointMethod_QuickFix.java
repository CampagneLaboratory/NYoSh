package NYoSh.typesystem;

/*Generated by MPS */

import jetbrains.mps.errors.QuickFix_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.baseLanguage.behavior.Classifier_Behavior;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class FixEntryPointMethod_QuickFix extends QuickFix_Runtime {
  public FixEntryPointMethod_QuickFix() {
  }

  public String getDescription(SNode node) {
    return "Set type from parser";
  }

  public void execute(SNode node) {
    SNode type = SLinkOperations.getTarget(Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SLinkOperations.getTarget(((SNode) FixEntryPointMethod_QuickFix.this.getField("entryPoint")[0]), "parser", false))).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals("parse");
      }
    }), "returnType", true);
    SLinkOperations.setTarget(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(((SNode) FixEntryPointMethod_QuickFix.this.getField("entryPoint")[0]), "implementation", true), "parameter", true)).first(), "type", type, true);
  }
}
