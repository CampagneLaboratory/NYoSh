package org.campagnelab.gobyweb.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collections;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.intentions.IntentionDescriptor;

public class AddDefaultErrorManagement_Intention implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;

  public AddDefaultErrorManagement_Intention() {
  }

  public String getConcept() {
    return "org.campagnelab.NYoSh.structure.Script";
  }

  public String getPresentation() {
    return "AddDefaultErrorManagement";
  }

  public String getPersistentStateKey() {
    return "org.campagnelab.gobyweb.intentions.AddDefaultErrorManagement_Intention";
  }

  public String getLanguageFqName() {
    return "org.campagnelab.gobyweb";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return SLinkOperations.getTarget(node, "errorManagement", false) == null;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:c13e4aa8-3534-477b-bcd1-e8b38e45f88a(org.campagnelab.gobyweb.intentions)", "4780568564618431556");
  }

  public boolean isSurroundWith() {
    return false;
  }

  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new AddDefaultErrorManagement_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }

  public class IntentionImplementation implements IntentionExecutable {
    public IntentionImplementation() {
    }

    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Add GobyWeb Error Management";
    }

    public void execute(final SNode node, final EditorContext editorContext) {
      SNode management = SConceptOperations.createNewNode("org.campagnelab.NYoSh.structure.ErrorManagement", null);
      SPropertyOperations.set(management, "name", "GobyWebDefaultErrorManagement");
      SModelOperations.addRootNode(SNodeOperations.getModel(node), SConceptOperations.createNewNode("org.campagnelab.NYoSh.structure.StepsLoggingSuccessHandler", null));
      SModelOperations.addRootNode(SNodeOperations.getModel(node), SConceptOperations.createNewNode("org.campagnelab.NYoSh.structure.StepsLoggingErrorHandler", null));
      SNode refSuccess = SConceptOperations.createNewNode("org.campagnelab.NYoSh.structure.SuccessHandlerReference", null);
      SLinkOperations.setTarget(refSuccess, "handler", ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node), "org.campagnelab.NYoSh.structure.StepsLoggingSuccessHandler")).first(), false);
      ListSequence.fromList(SLinkOperations.getTargets(management, "successHandler", true)).addElement(refSuccess);
      SNode refError = SConceptOperations.createNewNode("org.campagnelab.NYoSh.structure.ErrorHandlerReference", null);
      ListSequence.fromList(SLinkOperations.getTargets(management, "errorHandlers", true)).addElement(refError);
      SLinkOperations.setTarget(refError, "handler", ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node), "org.campagnelab.NYoSh.structure.StepsLoggingErrorHandler")).first(), false);


      SModelOperations.addRootNode(SNodeOperations.getModel(node), management);
      SLinkOperations.setTarget(node, "errorManagement", management, false);
    }

    public IntentionDescriptor getDescriptor() {
      return AddDefaultErrorManagement_Intention.this;
    }
  }
}
